name: SonarQube and AccuKnox SAST Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarqube_sast:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17 for SonarQube
        uses: actions/setup-java@v1
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache SonarQube packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Install SonarQube scanner
        run: |
          curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonar-scanner-cli.zip
          sudo mv sonar-scanner-4.6.2.2472-linux /opt/sonar-scanner
          sudo ln -s /opt/sonar-scanner/bin/sonar-scanner /usr/local/bin/sonar-scanner

      - name: Run SonarQube scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=AccuKnox-Sonarqube-Usecase \
            -Dsonar.sources=. \
            -Dsonar.host.url=${{ secrets.SQ_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          
      - name: Run AccuKnox SAST job
        env:
          SQ_URL: ${{ secrets.SQ_URL }}
          SQ_AUTH_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          docker run --rm \
            -e SQ_URL=${{ secrets.SQ_URL }} \
            -e SQ_AUTH_TOKEN=${{ secrets.SONAR_TOKEN }} \
            -e REPORT_PATH=/app/data/ \
            -e SQ_PROJECTS="^AccuKnox-Sonarqube-Usecase$" \
            -v $PWD:/app/data/ \
            accuknox/sastjob:latest

      - name: Upload SAST reports
        env:
          AK_URL: ${{ secrets.AK_URL }}
          TENANT_ID: ${{ secrets.TENANT_ID }}
          AK_TOK: ${{ secrets.AK_TOK }}
        run: |
          cd ${GITHUB_WORKSPACE}
          for file in `ls -1 SQ-*.json`; do
            curl --location --request POST "https://$AK_URL/api/v1/artifact/?tenant_id=$TENANT_ID&data_type=SQ&save_to_s3=false" \
              --header "Tenant-Id: $TENANT_ID" \
              --header "Authorization: Bearer $AK_TOK" \
              --form "file=@\"$file\""
          done
